{"version":3,"sources":["App.styles.js","App.js","index.js"],"names":["flexCenter","css","borderRadius","boxShadow","color","size","GlobalStyle","createGlobalStyle","Box","styled","div","undefined","Result","Controls","ul","ControlItem","li","StyledButton","button","props","defaultCSS","type","App","number","setNumber","useState","operator","setOperator","prevNumberRef","useRef","useEffect","document","title","value","map","item","index","onClick","indexOf","current","length","substr","s1","parseFloat","s2","toString","alert","handleControlClick","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.821cc50c.chunk.js","sourcesContent":["import styled, { createGlobalStyle, css } from \"styled-components\";\r\n\r\nconst flexCenter = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst borderRadius = css`\r\n  border-radius: 0.25rem;\r\n`;\r\n\r\nconst boxShadow = (color = \"#CDCDCD\", size = \"0.1rem\") => {\r\n  return css`\r\n    box-shadow: 0 0 ${size} ${size} ${color};\r\n  `;\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  #root {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    ${flexCenter}\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  padding: 0.5rem;\r\n  ${borderRadius}\r\n  ${boxShadow(undefined, \"0.2rem\")}\r\n`;\r\n\r\nexport const Result = styled.div`\r\n  padding: 0.5rem;\r\n  ${borderRadius}\r\n  text-align: right;\r\n  border: 1.5px solid #cdcdcd;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  margin-bottom: 0.25rem;\r\n`;\r\n\r\nexport const Controls = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: auto auto auto auto;\r\n\r\n  & :nth-child(1),\r\n  & :nth-child(4n + 1) {\r\n    margin-left: 0;\r\n  }\r\n\r\n  & :nth-child(4n) {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const ControlItem = styled.li`\r\n  width: 4rem;\r\n  height: 3rem;\r\n  margin: 0.25rem;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ${(props) => {\r\n    const defaultCSS = css`\r\n      cursor: pointer;\r\n      ${borderRadius};\r\n      font-size: 1.25rem;\r\n\r\n      &:hover {\r\n        border: none;\r\n        ${props.type === \"equal\" ? boxShadow(\"#4285F4\") : boxShadow()}\r\n      }\r\n    `;\r\n\r\n    switch (props.type) {\r\n      case \"none\": {\r\n        return css`\r\n          background-color: transparent;\r\n        `;\r\n      }\r\n      case \"number\": {\r\n        return css`\r\n          ${defaultCSS}\r\n          background-color: transparent;\r\n          border: 1.5px solid #cdcdcd;\r\n        `;\r\n      }\r\n      case \"operator\": {\r\n        return css`\r\n          ${defaultCSS}\r\n        `;\r\n      }\r\n      case \"equal\": {\r\n        return css`\r\n          ${defaultCSS}\r\n          background-color: #4285F4;\r\n          color: white;\r\n        `;\r\n      }\r\n      default: {\r\n        return css``;\r\n      }\r\n    }\r\n  }}\r\n`;\r\n","import * as Styles from \"./App.styles\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function App() {\r\n  const controls = [\r\n    { type: \"number\", value: \"7\" },\r\n    { type: \"number\", value: \"8\" },\r\n    { type: \"number\", value: \"9\" },\r\n    { type: \"operator\", value: \"+\" },\r\n    { type: \"number\", value: \"4\" },\r\n    { type: \"number\", value: \"5\" },\r\n    { type: \"number\", value: \"6\" },\r\n    { type: \"operator\", value: \"-\" },\r\n    { type: \"number\", value: \"1\" },\r\n    { type: \"number\", value: \"2\" },\r\n    { type: \"number\", value: \"3\" },\r\n    { type: \"operator\", value: \"x\" },\r\n    { type: \"number\", value: \"0\" },\r\n    { type: \"number\", value: \"000\" },\r\n    { type: \"number\", value: \".\" },\r\n    { type: \"operator\", value: \"/\" },\r\n    { type: \"operator\", value: \"AC\" },\r\n    { type: \"operator\", value: \"DEL\" },\r\n    { type: \"none\" },\r\n    { type: \"equal\", value: \"=\" },\r\n  ];\r\n\r\n  const [number, setNumber] = useState(\"0\");\r\n  const [operator, setOperator] = useState(null);\r\n  const prevNumberRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Calculator\";\r\n  }, []);\r\n\r\n  function handleControlClick(item) {\r\n    switch (item.type) {\r\n      case \"number\": {\r\n        if (number === \"0\" && item.value !== \".\") {\r\n          if (item.value !== \"000\") {\r\n            setNumber(item.value);\r\n          }\r\n          break;\r\n        }\r\n\r\n        if (item.value === \".\") {\r\n          if (number.indexOf(item.value) < 0) {\r\n            setNumber(number + \".\");\r\n          }\r\n          break;\r\n        }\r\n\r\n        setNumber(number + item.value);\r\n        break;\r\n      }\r\n      case \"operator\": {\r\n        switch (item.value) {\r\n          case \"AC\": {\r\n            setNumber(\"0\");\r\n            setOperator(null);\r\n            prevNumberRef.current = null;\r\n            break;\r\n          }\r\n          case \"DEL\": {\r\n            if (number.length === 1) {\r\n              setNumber(\"0\");\r\n              break;\r\n            }\r\n\r\n            setNumber(number.substr(0, number.length - 1));\r\n            break;\r\n          }\r\n          default: {\r\n            setOperator(item.value);\r\n            prevNumberRef.current = number;\r\n            setNumber(\"0\");\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case \"equal\": {\r\n        if (operator && prevNumberRef.current) {\r\n          const s1 = parseFloat(prevNumberRef.current, 10);\r\n          const s2 = parseFloat(number, 10);\r\n          prevNumberRef.current = null;\r\n\r\n          switch (operator) {\r\n            case \"+\": {\r\n              setNumber((s1 + s2).toString());\r\n              setOperator(null);\r\n              break;\r\n            }\r\n            case \"-\": {\r\n              setNumber((s1 - s2).toString());\r\n              setOperator(null);\r\n              break;\r\n            }\r\n            case \"x\": {\r\n              setNumber((s1 * s2).toString());\r\n              setOperator(null);\r\n              break;\r\n            }\r\n            case \"/\": {\r\n              if (s2 === 0) {\r\n                alert(\"Cannot be divided by 0, please enter another number.\");\r\n                break;\r\n              }\r\n\r\n              setNumber((s1 / s2).toString());\r\n              setOperator(null);\r\n              break;\r\n            }\r\n            default: {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Styles.GlobalStyle />\r\n      <Styles.Box>\r\n        <Styles.Result>\r\n          <span>{number}</span>\r\n        </Styles.Result>\r\n        <div>\r\n          <Styles.Controls>\r\n            {controls.map((item, index) => (\r\n              <Styles.ControlItem key={index}>\r\n                <Styles.StyledButton\r\n                  onClick={() => handleControlClick(item)}\r\n                  type={item.type}\r\n                >\r\n                  {item.value}\r\n                </Styles.StyledButton>\r\n              </Styles.ControlItem>\r\n            ))}\r\n          </Styles.Controls>\r\n        </div>\r\n      </Styles.Box>\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"minireset.css\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}